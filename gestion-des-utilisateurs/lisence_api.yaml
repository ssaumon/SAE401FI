openapi: 3.0.3
info:
  title: User Management API
  description: API for user registration, login, logout, deletion, and permission management.
  version: 1.0.0

servers:
- url: http://localhost:5000
  description: Serveur principal

tags:
- name: user
  description: User management operations

paths:
  /register:
    post:
      tags:
      - user
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '200':
          description: User successfully created
          content:
            application/json:
              example:
                registered: "True"
                user_id: "12345"
        '400':
          description: Invalid request

  /login:
    post:
      tags:
      - user
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              example:
                logged: "True"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        '401':
          description: Invalid credentials

  /user/{email}:
    get:
      tags:
      - user
      summary: User info
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
          example: "john.doe2@example.com"
        description: user ID
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              example:
                last_name: Doe
                first_name: John
                email: john.doe@example.com
                birth_date: '01-01-1990'

        '401':
          description: Invalid credentials

  /modify:
    put:
      tags:
      - user
      summary: Modify user information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '200':
          description: User information updated
          content:
            application/json:
              example:
                updated: "True"
        '400':
          description: Invalid request

  /delete-user/{email}:
    delete:
      tags:
      - user
      summary: Delete a user
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
          format: email
          example: "john.doe@example.com"
        description: Email address of the user to be deleted
      responses:
        '200':
          description: User successfully deleted
          content:
            application/json:
              example:
                message: "User deleted successfully"
        '400':
          description: Invalid request

  /add-permissions:
    post:
      tags:
      - Permission
      summary: Add user permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        '200':
          description: Permissions successfully updated
          content:
            application/json:
              example:
                message: "Permissions added successfully"
        '400':
          description: Invalid request
  /modify-permissions:
    put:
      tags:
      - Permission
      summary: Modify user permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        '200':
          description: Permissions successfully updated
          content:
            application/json:
              example:
                message: "Permissions updated successfully"
        '400':
          description: Invalid request
  /delete-permissions:
    delete:
      tags:
      - Permission
      summary: Modify user permissions
      parameters:
      - in: query
        name: project_id
        required: true
        schema:
          type: string
          example: "1"
        description: Identifiant du projet pour lequel les permissions doivent être supprimées
      - in: query
        name: email
        required: true
        schema:
          type: string
          format: email
          example: "john.doe@example.com"
        description: Adresse email de l'utilisateur dont les permissions doivent être supprimées
      responses:
        '200':
          description: Permissions successfully deleted
          content:
            application/json:
              example:
                message: "Permissions updated successfully"
        '400':
          description: Invalid request

  /permissions-by-project/{project_id}:
    get:
      tags:
      - Permission
      summary: Retrieve user permissions
      parameters:
      - in: path
        name: project_id
        required: true
        schema:
          type: string
          example: "12345"
        description: Project ID
      responses:
        '200':
          description: Permissions successfully retrieved
          content:
            application/json:
              example:
                project_id: "2"
                email: "john.doe2@example.com"
                read: True
                write: False
                admin: False
        '400':
          description: Invalid request

  /permissions-by-email/{email}:
    get:
      tags:
      - Permission
      summary: Retrieve user permissions
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
          example: "john.doe2@example.com"
        description: Project ID
      responses:
        '200':
          description: Permissions successfully retrieved
          content:
            application/json:
              example:
                project_id: "2"
                email: "john.doe2@example.com"
                read: True
                write: False
                admin: False
        '400':
          description: Invalid request

components:
  schemas:
    User:
      type: object
      properties:
        last_name:
          type: string
          example: "Doe"
        first_name:
          type: string
          example: "John"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          example: "securepassword123"
        birth_date:
          type: string
          format: date
          example: "01-01-1990"
      required:
      - last_name
      - first_name
      - email
      - password
      - birth_date

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          example: "securepassword123"
      required:
      - email
      - password

    Permission:
      type: object
      properties:
        project_id:
          type: string
          example: "1"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        write:
          type: boolean
          example: true
        read:
          type: boolean
          example: true
        admin:
          type: boolean
          example: false
      required:
      - project_id
      - email
      - write
      - read
      - admin
