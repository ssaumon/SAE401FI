from flask import Flask, jsonify, request
import json, os
app = Flask(__name__)

def lire():
     with open("app/Vulnerability.json", 'r', encoding="utf-8") as f:
        contenu=json.load(f)
        return contenu

def write_json(new_data):

    if os.path.exists("app/Vulnerability.json"):
        os.remove("app/Vulnerability.json")

    with open("app/Vulnerability.json",'w') as file:
        json.dump(new_data, file, indent = 4)

def ajouter():

    vuln=request.get_json()
    if isinstance(vuln, dict):
        vuln=[vuln]

    contenu=lire()
    for item in vuln:  
        required_keys = ['id', 'VulnerabilityID', 'PkgName', 'InstalledVersion', 'FixedVersion', 'Severity', 'Title', 'Description', 'References']
        missing_keys = [key for key in required_keys if key not in item]
        if missing_keys:
            return f"Missing keys: {', '.join(missing_keys)}", 400
        id=item['id']
        for element in contenu:
            if isinstance(element, dict)and element.get('id') == id:
                return "id already existed", 422

        contenu.append(item)
        
    write_json(contenu)
    
    return "Success",200

@app.route("/")
def hello_world():
    return "<p>MicroService Vulnerability</p>"

@app.route("/Vulnerability", methods=["GET","POST"])
def ListerAjouter():
    if request.method=="GET":
        contenu = lire()
        return jsonify(contenu)
    if request.method=="POST":
        return(ajouter())
    else:
        return("Bad request")
        
@app.route("/Vulnerability/<int:id_Vuln>", methods=["GET","DELETE","PUT"])
def rechSupModID(id_Vuln):
    contenu=lire()
    if request.method=="GET":
        for element in contenu:
            if element['id']==id_Vuln:
                return element
            
    elif request.method=="DELETE":
        for element in contenu:
            if element['id']==id_Vuln:
                contenu.remove(element)
                write_json(contenu)
                return "Succ√®s",200

    #else:
if __name__ == '__main__':
    #app.run(host="0.0.0.0",port=5007)
    app.run(port=5007)